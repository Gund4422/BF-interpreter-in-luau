--!strict
local Players = game:GetService("Players")
local player = Players.LocalPlayer
local playerGui = player:WaitForChild("PlayerGui")

-- Clear old GUIs
for _, gui in pairs(playerGui:GetChildren()) do
    if gui.Name == "BrainfuckGUI" then gui:Destroy() end
end

-- Main GUI
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "BrainfuckGUI"
screenGui.Parent = playerGui

-- Collapsed Button
local toggleButton = Instance.new("TextButton", screenGui)
toggleButton.Size = UDim2.new(0, 50, 0, 50)
toggleButton.Position = UDim2.new(0, 50, 0, 50)
toggleButton.Text = "ðŸ’»"
toggleButton.Font = Enum.Font.SourceSansBold
toggleButton.TextScaled = true
toggleButton.BackgroundColor3 = Color3.fromRGB(0, 200, 128)
toggleButton.BorderSizePixel = 0

-- Expanded GUI Frame
local bg = Instance.new("Frame", screenGui)
bg.Size = UDim2.new(0, 700, 0, 550)
bg.Position = UDim2.new(0, 120, 0, 50)
bg.BackgroundColor3 = Color3.fromRGB(25, 25, 30)
bg.BorderSizePixel = 0

bg.Visible = false -- start collapsed

-- Title
local title = Instance.new("TextLabel", bg)
title.Size = UDim2.new(0,400,0,50)
title.Position = UDim2.new(0,50,0,20)
title.Text = "ðŸ’» Brainfuck Interpreter"
title.TextScaled = true
title.TextColor3 = Color3.fromRGB(0,255,128)
title.BackgroundTransparency = 1
title.Font = Enum.Font.SourceSansBold

-- Code Input
local codeBox = Instance.new("TextBox", bg)
codeBox.Size = UDim2.new(0,600,0,150)
codeBox.Position = UDim2.new(0,50,0,80)
codeBox.PlaceholderText = "Enter Brainfuck code"
codeBox.TextWrapped = true
codeBox.ClearTextOnFocus = false
codeBox.BackgroundColor3 = Color3.fromRGB(30,30,40)
codeBox.TextColor3 = Color3.fromRGB(200,200,200)
codeBox.Font = Enum.Font.Code
codeBox.TextScaled = true
codeBox.MultiLine = true
codeBox.BorderSizePixel = 0

-- Input
local inputBox = Instance.new("TextBox", bg)
inputBox.Size = UDim2.new(0,600,0,50)
inputBox.Position = UDim2.new(0,50,0,250)
inputBox.PlaceholderText = "Input for ',' commands"
inputBox.TextWrapped = true
inputBox.ClearTextOnFocus = false
inputBox.BackgroundColor3 = Color3.fromRGB(30,30,40)
inputBox.TextColor3 = Color3.fromRGB(200,200,200)
inputBox.Font = Enum.Font.Code
inputBox.TextScaled = true
inputBox.BorderSizePixel = 0

-- Output
local outputLabel = Instance.new("TextLabel", bg)
outputLabel.Size = UDim2.new(0,600,0,50)
outputLabel.Position = UDim2.new(0,50,0,320)
outputLabel.Text = "Output: "
outputLabel.TextWrapped = true
outputLabel.BackgroundColor3 = Color3.fromRGB(20,20,30)
outputLabel.TextColor3 = Color3.fromRGB(0,255,128)
outputLabel.Font = Enum.Font.Code
outputLabel.TextScaled = true
outputLabel.BorderSizePixel = 0

-- Run Button
local runButton = Instance.new("TextButton", bg)
runButton.Size = UDim2.new(0,150,0,50)
runButton.Position = UDim2.new(0,50,0,380)
runButton.Text = "Run ðŸ’¥"
runButton.Font = Enum.Font.SourceSansBold
runButton.TextColor3 = Color3.fromRGB(255,255,255)
runButton.BackgroundColor3 = Color3.fromRGB(0,200,128)
runButton.BorderSizePixel = 0
runButton.AutoButtonColor = true

-- Tape Visualization
local tapeFrame = Instance.new("Frame", bg)
tapeFrame.Size = UDim2.new(0,800,0,50)
tapeFrame.Position = UDim2.new(0,50,0,450)
tapeFrame.BackgroundTransparency = 1

local tapeLabels = {}
for i = 1, 20 do
    local label = Instance.new("TextLabel", tapeFrame)
    label.Size = UDim2.new(0,35,0,50)
    label.Position = UDim2.new(0, (i-1)*40, 0, 0)
    label.Text = "0"
    label.TextColor3 = Color3.fromRGB(0,255,128)
    label.BackgroundColor3 = Color3.fromRGB(40,40,50)
    label.BorderSizePixel = 0
    label.Font = Enum.Font.Code
    label.TextScaled = true
    tapeLabels[i] = label
end

-- Brainfuck Interpreter
local function runBrainfuck(code, input)
    local tape = {}
    for i = 1, 30000 do tape[i] = 0 end
    local pointer = 1
    local output = ""
    local loopStack = {}
    local inputIndex = 1

    local i = 1
    while i <= #code do
        local c = code:sub(i, i)
        if c == ">" then pointer += 1
        elseif c == "<" then pointer -= 1
        elseif c == "+" then tape[pointer] = (tape[pointer] + 1) % 256
        elseif c == "-" then tape[pointer] = (tape[pointer] - 1) % 256
        elseif c == "." then output ..= string.char(tape[pointer])
        elseif c == "," then
            local char = input:sub(inputIndex, inputIndex)
            tape[pointer] = char:byte() or 0
            inputIndex += 1
        elseif c == "[" then
            if tape[pointer] == 0 then
                local depth = 1
                while depth > 0 do
                    i += 1
                    local ch = code:sub(i, i)
                    if ch == "[" then depth += 1 end
                    if ch == "]" then depth -= 1 end
                end
            else table.insert(loopStack, i) end
        elseif c == "]" then
            if tape[pointer] ~= 0 then i = loopStack[#loopStack]
            else table.remove(loopStack)
            end
        end

        -- Update tape GUI
        local startCell = math.max(1, pointer - 10)
        for j = 1, 20 do
            local cellIndex = startCell + j - 1
            tapeLabels[j].Text = tape[cellIndex] or 0
            local targetColor = (cellIndex == pointer) and Color3.fromRGB(0,255,128) or Color3.fromRGB(40,40,50)
            tapeLabels[j]:TweenColor(targetColor, "Out", "Quad", 0.1, true)
        end

        i += 1
        task.wait(0.03)
    end

    return output
end

-- Run Button
runButton.MouseButton1Click:Connect(function()
    local code = codeBox.Text
    local input = inputBox.Text
    local result = runBrainfuck(code, input)
    outputLabel.Text = "Output: " .. result
end)

-- Toggle Expanded/Collapsed
toggleButton.MouseButton1Click:Connect(function()
    bg.Visible = not bg.Visible
end)
